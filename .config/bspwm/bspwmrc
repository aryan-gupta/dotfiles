#! /bin/sh
# set -x

HOSTNAME=$(hostname)

case $HOSTNAME in
  ("boson")
    bspc monitor $PRIMARY_MONITOR -d 1 2 3 4 5 6 7 8 9 0
    bspc monitor HDMI-1 -d A
  ;;

  ("graviton")
    [ $PRIMARY_MONITOR ] && bspc monitor $PRIMARY_MONITOR -d 1 2 3 4 5 6 7 8 9 0
    [ $LEFT_MONITOR    ] && bspc monitor $LEFT_MONITOR    -d A
    [ $RIGHT_MONITOR   ] && bspc monitor $RIGHT_MONITOR   -d B
    [ $TABLET_MONITOR  ] && bspc monitor $TABLET_MONITOR  -d C
  ;;

  ("default")
    bspc monitor $PRIMARY_MONITOR -d 1 2 3 4 5 6 7 8 9 0
  ;;
esac

# wmname LG3D &

gap=25
PANEL_HEIGHT=50
bspc config window_gap           $gap
bspc config left_padding        -$gap
bspc config right_padding       -$gap
# bspc config bottom_padding      0
bspc config bottom_padding      $(($PANEL_HEIGHT-$gap))
bspc config top_padding         -$gap

bspc config border_width         0
bspc config split_ratio          0.5

bspc config borderless_monocle   true
bspc config gapless_monocle      false

bspc config borderless_monocle   true
bspc config gapless_monocle      false
bspc config single_monocle       true

# https://github.com/baskerville/bspwm/issues/600
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_corner
bspc config pointer_action3 resize_side

bspc config normal_border_color   \#000000
bspc config focused_border_color  \#683060
bspc config presel_feedback_color $COLOR_ACNTDRK_N

bspc config swallow_first_click false
bspc config honor_size_hints    true

bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true

bspc rule -a Zathura state=tiled
bspc rule -a *:*:Lenna state=tiled

bspc config external_rules_command "$HOME/.config/bspwm/java_fix"


delete_local_receptacles() {
  for win in $(bspc query -N -n .leaf.local.!window); do
    bspc node $win -k
  done
}

void_empty_desktop(){
  if [ -z "$(bspc query -N -n .local.focused)" ]; then
    delete_local_receptacles
    bspc desktop -f last.occupied.local
  fi
}

# Focus the last desktop after all windows are closed
# bspc subscribe node_transfer |  while read -r _; do void_empty_desktop; done
bspc subscribe node_remove   |  while read -r _; do void_empty_desktop; done &



# ======================== apps ========================
case $HOSTNAME in
  ("boson")
    killall -q libinput-gestures-setup && libinput-gestures-setup start &
    xinput set-prop 'ELAN0672:00 04F3:3187 Touchpad' 'libinput Natural Scrolling Enabled'      1
    xinput set-prop 'ELAN0672:00 04F3:3187 Touchpad' 'libinput Tapping Enabled'                1
    xinput set-prop 'ELAN0672:00 04F3:3187 Touchpad' 'libinput Tapping Drag Lock Enabled'      1
    xinput set-prop 'ELAN0672:00 04F3:3187 Touchpad' 'libinput Tapping Button Mapping Enabled' 0 1
    xinput set-prop 'Logitech Wireless Mouse'        'libinput Accel Speed'                    -0.9
    export BROWSER="firefox"
    export POLYBAR_TIME="True"
    export POLYBAR_MUSIC="False"
  ;;

  ("graviton")
    # [ ! -s ~/.config/mpd/pid ] && mpd
    export BROWSER="firefox"
    export VPNBROWSER="brave"
    export POLYBAR_TIME="True"
    export POLYBAR_MUSIC="False"
  ;;

  (*)
  ;;
esac

killall -q sxhkd     ; sxhkd &
killall -q picom     ; picom &
killall -q nitrogen  ; nitrogen --restore &
killall -q redshift  ; redshift -P -O 3500 &
killall -q dunst     ; dunst &
killall -q flameshot ; flameshot &
killall -q unclutter ; unclutter --timeout 2 --jitter 5 --exclude-root --ignore-scrolling --fork

[ $TABLET_MONITOR  ] && bspc rule -a pentablet hidden=on desktop=C && sudo /usr/lib/pentablet/pentablet.sh &

export ROOT_FS_TEXT="%{F$COLOR_ACNTLGT_N}root%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %percentage_used:2%% "
export HOME_FS_TEXT="%{F$COLOR_ACNTLGT_N}home%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %percentage_used:2%% "
export NAS_FS_TEXT="%{F$COLOR_ACNTLGT_N}nas%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %percentage_used:2%% "
export ROOT_FS_TEXT_ERR="%{F$COLOR_ACNTLGT_N}root%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %{F$COLOR_WARNING_H}!MNT%{F-} "
export HOME_FS_TEXT_ERR="%{F$COLOR_ACNTLGT_N}home%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %{F$COLOR_WARNING_H}!MNT%{F-} "
export NAS_FS_TEXT_ERR="%{F$COLOR_ACNTLGT_N}nas%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %{F$COLOR_WARNING_H}!MNT%{F-} "
export TEMP_TEXT="%{F$COLOR_ACNTLGT_N}temp%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %temperature-c% "
export CPU_TEXT="%{F$COLOR_ACNTLGT_N}cpu%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %percentage-sum:3% "
export MEM_TEXT="%{F$COLOR_ACNTLGT_N}mem%{F-}%{F$COLOR_ACNTDRK_L}:%{F-} %percentage_used:2%% "
export MUSIC_TEXT="%title%%{F$COLOR_ACNTDRK_L} - %{F-}%{F$COLOR_ACNTLGT_N}%artist%%{F-}"
export DATE_TEXT="%Y%{F$COLOR_ACNTDRK_L}-%{F-}%m%{F$COLOR_ACNTDRK_L}-%{F-}%d"
export TIME_TEXT="%H%{F$COLOR_ACNTDRK_L}:%{F-}%M"
killall -q polybar  ;
    polybar ws &
    [ $POLYBAR_TIME = "True" ] && polybar time &
    # polybar ws-tv &
    [ $POLYBAR_MUSIC = "True" ] && polybar music &
    polybar sysinfo &
    polybar ws-flags &
# ======================== apps ========================











# if start file exists, bspwm was restarted
BSPWMRC_START_FILE="/tmp/BSPWM_START.txt"
if [ -f "$BSPWMRC_START_FILE" ];
then
  echo "BSPWM was restarted"
else
  echo "Welcome to Linux"
  echo $(date) > "$BSPWMRC_START_FILE"
  #bspc rule -a '*' -o state=floating rectangle=640x480+1600+640
  #sleep 10
  #alacritty --hold -e asciiquarium &
fi
